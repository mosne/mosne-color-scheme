{"version":3,"file":"view.js","mappings":";;;;;;;;;AAAA;AACA,aAAa,6BAA6B;AAC1C;AACA;AACA;;;;;;SCJA;SACA;;SAEA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;;SAEA;SACA;;SAEA;SACA;SACA;;;;;UCtBA;UACA;UACA;UACA,uDAAuD,iBAAiB;UACxE;UACA,gDAAgD,aAAa;UAC7D;;;;;;;;;;;;ACNA;AACA;AACA;AAC6D;AAE7DA,+DAAK,CAAE,cAAc,EAAE;EACtBE,OAAO,EAAE;IACRC,MAAM,EAAEA,CAAA,KAAM;MACb,MAAMC,OAAO,GAAGH,oEAAU,CAAC,CAAC;MAC5BG,OAAO,CAACC,MAAM,GAAG,CAAED,OAAO,CAACC,MAAM;IAClC;EACD,CAAC;EACDC,SAAS,EAAE;IACVC,SAAS,EAAEA,CAAA,KAAM;MAChB,MAAM;QAAEF;MAAO,CAAC,GAAGJ,oEAAU,CAAC,CAAC;MAC/B;MACAO,OAAO,CAACC,GAAG,CAAG,YAAYJ,MAAQ,EAAE,CAAC;MACrCK,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAE,qBAAqB,GAACR,MAAO,CAAC;IAC5D;EACD;AACD,CAAE,CAAC;;AAGH;AACA,MAAMS,UAAU,GAAGC,MAAM,CAACC,gBAAgB,CAAEN,QAAQ,CAACC,IAAK,CAAC;AAC3D,MAAMM,SAAS,GAAGH,UAAU,CAC1BI,gBAAgB,CAAE,2BAA4B,CAAC,CAC/CC,IAAI,CAAC,CAAC;AACR,MAAMC,aAAa,GAAGN,UAAU,CAC9BI,gBAAgB,CAAE,+BAAgC,CAAC,CACnDC,IAAI,CAAC,CAAC;AAERX,OAAO,CAACC,GAAG,CAAEQ,SAAU,CAAC;AACxBT,OAAO,CAACC,GAAG,CAAEW,aAAc,CAAC,C","sources":["webpack://mosne-color-scheme/external module \"@wordpress/interactivity\"","webpack://mosne-color-scheme/webpack/bootstrap","webpack://mosne-color-scheme/webpack/runtime/make namespace object","webpack://mosne-color-scheme/./src/view.js"],"sourcesContent":["var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * WordPress dependencies\n */\nimport { store, getContext } from '@wordpress/interactivity';\n\nstore( 'create-block', {\n\tactions: {\n\t\ttoggle: () => {\n\t\t\tconst context = getContext();\n\t\t\tcontext.isOpen = ! context.isOpen;\n\t\t},\n\t},\n\tcallbacks: {\n\t\tlogIsOpen: () => {\n\t\t\tconst { isOpen } = getContext();\n\t\t\t// Log the value of `isOpen` each time it changes.\n\t\t\tconsole.log( `Is open: ${ isOpen }` );\n\t\t\tdocument.body.classList.add( 'mosne-color-scheme-'+isOpen );\n\t\t},\n\t},\n} );\n\n\n// Get the root padding variables.\nconst bodyStyles = window.getComputedStyle( document.body );\nconst colorBase = bodyStyles\n\t.getPropertyValue( '--wp--preset--color--base' )\n\t.trim();\nconst colorContrast = bodyStyles\n\t.getPropertyValue( '--wp--preset--color--contrast' )\n\t.trim();\n\nconsole.log( colorBase );\nconsole.log( colorContrast );\n"],"names":["store","getContext","actions","toggle","context","isOpen","callbacks","logIsOpen","console","log","document","body","classList","add","bodyStyles","window","getComputedStyle","colorBase","getPropertyValue","trim","colorContrast"],"sourceRoot":""}